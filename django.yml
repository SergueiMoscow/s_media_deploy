---
- hosts: servers
  become: true
  vars_files:
    - s_media_secrets.yaml
    
  tasks:

  - name: Clone s_media_api repository
    ansible.builtin.git:
      repo: https://github.com/SergueiMoscow/s_media_api.git
      clone: yes
      dest: /var/www/s_media_api

  - name: Update Poetry to a specific version
    ansible.builtin.shell:
      cmd: pipx install poetry==1.7.1 --force
    # register: poetry_update_result

  # - name: Debug Poetry update output
  #   ansible.builtin.debug:
  #     msg: "{{ poetry_update_result.stdout_lines }}"

  # - name: Print environment variables (debug)
  #   shell: "env"
  #   register: print_env
  # - name: Debug environment variables (debug)
  #   debug:
  #     var: print_env.stdout_lines

  # - name: Get Poetry virtualenv path
  #   shell: /usr/local/bin/poetry init
  #   args:
  #     chdir: "{{ backend }}"

  - name: Get Poetry virtualenv path
    shell: ~/.local/bin/poetry env use python3.12
    args:
      chdir: "{{ backend }}"

  - name: Get Poetry virtualenv path
    shell: ~/.local/bin/poetry env info -p
    args:
      chdir: "{{ backend }}"
    register: poetry_env_path
    changed_when: false

  - name: Install dependencies with Poetry
    ansible.builtin.shell:
      cmd: ~/.local/bin/poetry install
      chdir: "{{ backend }}"
    register: poetry_install_result

  - name: Debug Poetry installation output
    ansible.builtin.debug:
      msg: "{{ poetry_install_result.stdout_lines }}"

  - name: Добавление Uvicorn в systemd
    template:
      src: templates/uvicorn.service.j2
      dest: /etc/systemd/system/uvicorn.service
    vars:
      poetry_virtualenv_path: "{{ poetry_env_path.stdout }}"
    notify: restart uvicorn

  - name: Запуск и активация Uvicorn на загрузку
    systemd:
      name: uvicorn
      state: started
      enabled: yes

  handlers:
    - name: restart uvicorn
      systemd:
        name: s_media_api
        state: restarted
